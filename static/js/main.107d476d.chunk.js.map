{"version":3,"sources":["components/Form.js","components/Post.js","components/List.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["hashCode","str","hash","length","i","charCodeAt","Form","props","className","autoFocus","minLength","maxLength","value","inputName","onChange","e","setInputName","target","type","placeholder","required","inputEmail","setInputEmail","inputDescription","setInputDescription","inputTags","setInputTags","onClick","preventDefault","setPosts","posts","show","id","name","email","des","tags","setCurrentPosts","Post","List","map","post","deleteHandler","Main","parentElement","classList","add","console","log","inputSearchHandler","setSearchInput","filter","postName","toLowerCase","emailName","desName","tagName","includes","searchInput","path","exact","this","onFocus","onKeyUp","currentPosts","Component","App","useState","deletedPosts","setDeletedPosts","basename","process","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.107d476d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction hashCode(str) {\r\n  let hash = 0;\r\n  if (str.length === 0) return hash;\r\n  for (let i = 0; i < str.length; i++) {\r\n    let char = str.charCodeAt(i);\r\n    hash = (hash << 5) - hash + char;\r\n    hash = hash & hash; //convert to 32bit integer\r\n  }\r\n  return hash;\r\n}\r\n\r\nconst Form = (props) => {\r\n  const inputNameHandler = (e) => {\r\n    props.setInputName(e.target.value);\r\n  };\r\n  const inputEmailHandler = (e) => {\r\n    props.setInputEmail(e.target.value);\r\n  };\r\n  const inputDesHandler = (e) => {\r\n    props.setInputDescription(e.target.value);\r\n  };\r\n  const inputTagsHandler = (e) => {\r\n    props.setInputTags(e.target.value);\r\n  };\r\n  const submitFormHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      props.inputName.length === 0 ||\r\n      props.inputEmail.length === 0 ||\r\n      props.inputDescription.length === 0 ||\r\n      props.inputTags.length === 0\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    props.setPosts([\r\n      ...props.posts,\r\n      {\r\n        show: true,\r\n        id: hashCode(\r\n          props.inputDescription +\r\n            props.inputName +\r\n            props.inputEmail +\r\n            props.inputTags\r\n        ),\r\n        name: props.inputName,\r\n        email: props.inputEmail,\r\n        des: props.inputDescription,\r\n        tags: props.inputTags,\r\n      },\r\n    ]);\r\n\r\n    //\r\n    props.setCurrentPosts(props.posts);\r\n    //\r\n\r\n    props.setInputName(\"\");\r\n    props.setInputEmail(\"\");\r\n    props.setInputDescription(\"\");\r\n    props.setInputTags(\"\");\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <div className=\"input__box\">\r\n        <input\r\n          autoFocus={true}\r\n          minLength=\"2\"\r\n          maxLength=\"20\"\r\n          value={props.inputName}\r\n          onChange={inputNameHandler}\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          className=\"todo-input\"\r\n          required\r\n        />\r\n        <input\r\n          required={true}\r\n          value={props.inputEmail}\r\n          onChange={inputEmailHandler}\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          className=\"todo-input\"\r\n        />\r\n        <input\r\n          required={true}\r\n          value={props.inputDescription}\r\n          onChange={inputDesHandler}\r\n          type=\"text\"\r\n          placeholder=\"Description\"\r\n          className=\"todo-input\"\r\n        />\r\n        <input\r\n          required={true}\r\n          value={props.inputTags}\r\n          onChange={inputTagsHandler}\r\n          type=\"text\"\r\n          placeholder=\"Tags\"\r\n          className=\"todo-input\"\r\n        />\r\n        <button\r\n          onClick={submitFormHandler}\r\n          // onSubmit={submitFormHandler}\r\n          className=\"todo-button\"\r\n          type=\"submit\"\r\n        >\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className=\"todo\">\r\n      <li className=\"todo-item\">\r\n        <p>\r\n          <strong>Name:</strong> {props.name}\r\n        </p>\r\n        {/* </li> */}\r\n        {/* <li className=\"todo-item\"> */}\r\n        <p>\r\n          <strong>Email:</strong> {props.email}\r\n        </p>\r\n        {/* </li> */}\r\n        {/* <li className=\"todo-item\"> */}\r\n        <p>\r\n          <strong>Description:</strong> {props.des}\r\n        </p>\r\n        {/* </li> */}\r\n        {/* <li className=\"todo-item\"> */}\r\n        <p>\r\n          <strong>Tags:</strong> {props.tags}\r\n        </p>\r\n\r\n        {/* <button className=\"trash-btn\" onClick={props.deleteHandler}>\r\n          <i class=\"fas fa-trash \"></i>\r\n        </button> */}\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport Post from \"./Post\";\r\n\r\nconst List = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n          {props.posts\r\n            // .filter((post) => {\r\n            //   if (post != null) return post.show;\r\n            //   else return false;\r\n            // })\r\n            .map((post) => (\r\n              <Post\r\n                deleteHandler={props.deleteHandler}\r\n                key={post.id}\r\n                name={post.name}\r\n                email={post.email}\r\n                des={post.des}\r\n                tags={post.tags}\r\n              />\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Form from \"./Form\";\r\nimport List from \"./List\";\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props.setCurrentPosts(this.props.posts);\r\n  }\r\n\r\n  deleteHandler = (e) => {\r\n    e.target.parentElement.parentElement.classList.add(\"fall\");\r\n\r\n    console.log(e.target.parentElement.parentElement.classList);\r\n\r\n    // this.props.setDeletedPosts(\r\n    //   this.props.posts.filter(\r\n    //     (post) =>\r\n    //       post.inputName === e.target.parentElement.parentElement.inputName &&\r\n    //       post.inputEmail === e.target.parentElement.parentElement.inputEmail &&\r\n    //       post.inputDescription ===\r\n    //         e.target.parentElement.parentElement.inputDescription &&\r\n    //       post.inputTags === e.target.parentElement.parentElement.inputTags\r\n    //   )\r\n    // );\r\n\r\n    // console.log(\"deleted\");\r\n    // this.props.deletedPosts.map((post) => console.log(post));\r\n\r\n    // this.props.setPosts(\r\n    //   this.props.posts.filter(\r\n    //     (post) =>\r\n    //       !(\r\n    //         post.inputName === e.target.parentElement.parentElement.inputName &&\r\n    //         post.inputEmail ===\r\n    //           e.target.parentElement.parentElement.inputEmail &&\r\n    //         post.inputDescription ===\r\n    //           e.target.parentElement.parentElement.inputDescription &&\r\n    //         post.inputTags === e.target.parentElement.parentElement.inputTags\r\n    //       )\r\n    //   )\r\n    // );\r\n    // console.log(\"posts\");\r\n    // this.props.deletedPosts.map((post) => console.log(post));\r\n\r\n    // this.props.setCurrentPosts(this.props.posts);\r\n  };\r\n\r\n  inputSearchHandler = (e) => {\r\n    e.preventDefault();\r\n    this.props.setSearchInput(e.target.value);\r\n\r\n    if (this.props.setSearchInput.length > 0) {\r\n      this.props.setCurrentPosts(\r\n        this.props.posts.filter((post) => {\r\n          let postName = post.name.toLowerCase();\r\n          let emailName = post.email.toLowerCase();\r\n          let desName = post.des.toLowerCase();\r\n          let tagName = post.tags.toLowerCase();\r\n\r\n          return (\r\n            postName.includes(this.props.searchInput.toLowerCase()) ||\r\n            emailName.includes(this.props.searchInput.toLowerCase()) ||\r\n            desName.includes(this.props.searchInput.toLowerCase()) ||\r\n            tagName.includes(this.props.searchInput.toLowerCase())\r\n          );\r\n          // return post.name.match(this.props.searchInput);\r\n        })\r\n      );\r\n    } else {\r\n      this.props.setCurrentPosts(this.props.posts);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <section>\r\n            <input\r\n              autoFocus={true}\r\n              onChange={this.inputSearchHandler}\r\n              onFocus={this.inputSearchHandler}\r\n              onKeyUp={this.inputSearchHandler}\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              value={this.props.searchInput}\r\n            />\r\n            <List\r\n              posts={this.props.currentPosts}\r\n              //   posts={this.currentPosts}\r\n              inputSearchHandler={this.inputSearchHandler}\r\n              searchInput={this.props.searchInput}\r\n              setSearchInput={this.props.setSearchInput}\r\n              deleteHandler={this.deleteHandler}\r\n            />\r\n          </section>\r\n        </Route>\r\n        <Route path=\"/new\">\r\n          <section>\r\n            <Form\r\n              inputName={this.props.inputName}\r\n              inputEmail={this.props.inputEmail}\r\n              inputDescription={this.props.inputDescription}\r\n              inputTags={this.props.inputTags}\r\n              setInputName={this.props.setInputName}\r\n              setInputEmail={this.props.setInputEmail}\r\n              setInputDescription={this.props.setInputDescription}\r\n              setInputTags={this.props.setInputTags}\r\n              setPosts={this.props.setPosts}\r\n              posts={this.props.posts}\r\n              setCurrentPosts={this.props.setCurrentPosts}\r\n            />\r\n          </section>\r\n        </Route>\r\n        <Route path=\"/trash\" exact>\r\n          <section>\r\n            Kosz\r\n            {/* <Trash /> */}\r\n          </section>\r\n        </Route>\r\n        <Route>\r\n          <h1>\r\n            {\" \"}\r\n            <section>404 page not found</section>\r\n          </h1>\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, NavLink } from \"react-router-dom\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  const [inputName, setInputName] = useState(\"\");\n  const [inputEmail, setInputEmail] = useState(\"\");\n  const [inputDescription, setInputDescription] = useState(\"\");\n  const [inputTags, setInputTags] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [currentPosts, setCurrentPosts] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [deletedPosts, setDeletedPosts] = useState([]);\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <header className=\"App\">\n        <h1>Tinder...for projects</h1>\n      </header>\n      <main>\n        <nav>\n          <NavLink className=\"nav_link\" to=\"/\" exact>\n            All\n          </NavLink>\n          <NavLink className=\"nav_link\" to=\"/new\">\n            New\n          </NavLink>\n          {/* <NavLink className=\"nav_link\" to=\"/trash\">\n            Trash\n          </NavLink> */}\n        </nav>\n\n        <Main\n          inputName={inputName}\n          inputEmail={inputEmail}\n          inputDescription={inputDescription}\n          inputTags={inputTags}\n          setInputName={setInputName}\n          setInputEmail={setInputEmail}\n          setInputDescription={setInputDescription}\n          setInputTags={setInputTags}\n          setPosts={setPosts}\n          posts={posts}\n          searchInput={searchInput}\n          setSearchInput={setSearchInput}\n          currentPosts={currentPosts}\n          setCurrentPosts={setCurrentPosts}\n          deletedPosts={deletedPosts}\n          setDeletedPosts={setDeletedPosts}\n        />\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}